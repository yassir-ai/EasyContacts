- name: Create portainer network
  become: yes
  community.general.docker_network:
    name: agent_network
    driver: overlay
    scope: swarm

- name: "Install portainer agent"
  become: yes
  community.general.docker_swarm_service:
    name: portainer
    image: "portainer/agent"
    mounts:
      - source: /var/run/docker.sock
        target: /var/run/docker.sock
    networks:
      - agent_network
    mode: global

- name: "Add portainer secret"
  become: yes
  community.general.docker_secret:
    name: portainer_admin_password
    data: "admin"

- name: "Add portainer-server data"
  become: yes
  community.general.docker_volume:
    name: portainer_data

- name: "Install portainer server"
  become: yes
  community.general.docker_swarm_service:
    name: portainer_server
    image: "portainer/portainer-ce:2.0.0-alpine"
    args:
      - "-H"
      - "tcp://portainer:9001"
      - "--tlsskipverify"
      - "--admin-password-file"
      - "/run/secrets/portainer_admin_password"
    networks:
      - agent_network
      - traefik
    labels:
      traefik.http.routers.portainer.entrypoints: "https"
      traefik.http.routers.portainer.rule: "Host(`{{ portainer_domain}}`)"
      traefik.http.services.portainer.loadbalancer.server.port: "9000"
    mounts:
      - source: portainer_data
        target: /data
        type: volume
    replicas: 1
    placement:
      constraints:
        - "node.role==manager"
    secrets:
      - secret_name: "portainer_admin_password"
        filename: portainer_admin_password

